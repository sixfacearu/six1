pragma solidity ^0.4.0;
contract ob
{    
    uint256 key1;
    uint256 key;
    struct stu{
        string name;
        uint256 age;
        uint256 id;
    }
    mapping(uint256=>stu)stud;
    mapping(uint256=>stu)studs;
    function oldset(uint256 key1,string name,uint256 age,uint256 id)public{
        stud[key1].name=name;
        stud[key1].age=age;
        stud[key1].id=id;
    }
    function get(uint256 key)public constant returns(string,uint256,uint256){
        return(stud[key].name,stud[key].age,stud[key].id);
        
    }
    function Newset(uint256 key,string name,uint256 age,uint256 id)public {
        studs[key].name=name;
        studs[key].age=age;
        studs[key].id=id; 
    }
    function check(uint256 key)public constant returns(string){
        for(uint256 i=1;i<2;i++)
        {
            if(stud[i].id==studs[key].id)
            {
                return "already exist";
                
            }
            
        }
         
                      return "new student";
                           
      }
        
    
}
