pragma solidity ^0.4.0;
contract ob
{    
    uint256 key1;
    uint256 c=1;
    struct stu{
        string name;
        uint256 age;
        uint256 id;
    }
    mapping(uint256=>stu)stud;
    
    function oldset(uint256 key1,string name,uint256 age,uint256 id)public{
        stud[key1].name=name;
        stud[key1].age=age;
        stud[key1].id=id;
    }
    function Newset(string name,uint256 age,uint256 id) public constant returns(string) {
        stud[0].name=name;
        stud[0].age=age;
        stud[0].id=id; 
        for(uint256 i=1;i<=key1;i++){
            if(stud[i].id==stud[0].id){
                c++;
            }
        }
        if(c>1){
            return "not valid";
        }
        else
        {
            
            stud[key1].name=stud[0].name;
            stud[key1].age==stud[0].age;
            stud[key1].id==stud[0].id;
             return  "valid";
            
        }
        
    }

    function get(uint256 key)public constant returns(string,uint256,uint256){
        return(stud[key].name,stud[key].age,stud[key].id);
        
    }
}
        
    
